/*
 * To change this template, choose Tools | Templates
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CanvasAppletMenuBottom.java
 *
 * Created on 23.Kas.2011, 00:28:13
 */

package applet_algorithm;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author bibi
 */
public class CanvasAppletMenuBottom extends javax.swing.JPanel {

    /** Creates new form CanvasAppletMenuBottom */
    public CanvasAppletMenuBottom() {
        initComponents();
        schematize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schematizeActionPerformed(evt);
            }
        });
        searchButton.addActionListener(new ActionListener(){

            public void actionPerformed(ActionEvent e) {
                searchButtonActionPerformed();
            }

        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        schematize = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        searchKeys = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setPreferredSize(new java.awt.Dimension(500, 50));

        schematize.setText("Start Schematizing");
        schematize.setName("schematize"); // NOI18N
        searchButton.setText("Search Maps");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(schematize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(searchKeys, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(searchButton)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schematize, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(searchButton)
                    .addComponent(searchKeys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>

    private void schematizeActionPerformed(ActionEvent e){
        MyPoint p = new MyPoint(0,0);
        Vector<MyPoint> temp = new Vector<MyPoint>();
        Vector<MyPoint> accs = new Vector<MyPoint>();
        //p.outgoingPoints.add(CanvasApplet.canvasPanel.returnSmallesPoint());
        try{

            if(CanvasApplet.isDefault){
                ArrayList<Connection> strpoints = CanvasApplet.canvasPanel.connections.get(0).findStartingPoints();
                for(int i=0;i<strpoints.size();i++){
                    p.outgoingPoints.add(strpoints.get(i).p1);
                    Algorithm alg = new Algorithm(p,"",1);
                    p = alg.Schematize();
                    accs = p.returnaccesiblepoints();
                    for(int j=0;j<accs.size();j++){
                        temp.add(accs.get(j));
                    }
                    p= new MyPoint(0,0);
                }
            } else{
                ArrayList<Connection> strpoints = CanvasApplet.canvasPanel.connections.get(0).findStartingPoints();
                for(int i=0;i<strpoints.size();i++){
                    p.outgoingPoints.add(strpoints.get(i).p1);
                    Algorithm deneme = new Algorithm(p,"",1,CanvasApplet.angleMultiple,CanvasApplet.ew,CanvasApplet.ns,CanvasApplet.dist);
                    p = deneme.Schematize();
                    accs = p.returnaccesiblepoints();
                    for(int j=0;j<accs.size();j++){
                        temp.add(accs.get(j));
                    }
                    p= new MyPoint(0,0);
                }
            }
        CanvasApplet.canvasPanel.points=temp;
        schematize.setEnabled(false);
        CanvasApplet.canvasPanel.repaint();
        }catch(IOException f){}
    }
    private void searchButtonActionPerformed(){
        //SEARCH OLAYI BURADA OLACAK!!! @EYLUL,YEKTA,OZGUR
        JOptionPane.showMessageDialog(null, "Search results.");
        //burada map objesi oluşturulacak.
        //şimdilik keywords null, visibility sürekli true sonradan değiştirilecek.
        Map map = new Map(CanvasApplet.canvasPanel.mapDescription,true,null,CanvasApplet.canvasPanel.points,CanvasApplet.canvasPanel.connections);
    }

    public void enableSchematizing(){
        schematize.setEnabled(true);
    }

    // Variables declaration - do not modify
    private javax.swing.JButton schematize;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchKeys;
    // End of variables declaration

}

